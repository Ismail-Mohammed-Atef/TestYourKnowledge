<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PREl+sUAAAAASUVORK5CYII=
</value>
  </data>
</root>